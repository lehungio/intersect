{"version":3,"sources":["../intersect.js"],"names":["abs","clamp","sign","EPSILON","value","min","max","Point","x","y","length","Math","sqrt","inverseLength","Hit","collider","pos","delta","normal","Sweep","hit","time","AABB","half","point","dx","px","dy","py","sx","sy","paddingX","paddingY","scaleX","scaleY","signX","signY","nearTimeX","nearTimeY","farTimeX","farTimeY","nearTime","farTime","box","sweep","intersectAABB","intersectSegment","direction","clone","normalize","staticColliders","nearest","i","il","sweepAABB","Circle","radius","padding","distanceSquared","minDistance","r","mx","my","a","b","c","discr","circle","intersectPoint","intersectCircle"],"mappings":"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","file":"intersect.js","sourcesContent":["'use strict';\n\nexport const EPSILON = 1e-8;\n\nexport function abs(value) {\n  return value < 0 ? -value : value;\n}\n\nexport function clamp(value, min, max) {\n  if (value < min) {\n    return min;\n  } else if (value > max) {\n    return max;\n  } else {\n    return value;\n  }\n}\n\nexport function sign(value) {\n  return value < 0 ? -1 : 1;\n}\n\nexport class Point {\n  constructor(x = 0, y = 0) {\n    this.x = x;\n    this.y = y;\n  }\n\n  clone() {\n    return new Point(this.x, this.y);\n  }\n\n  normalize() {\n    let length = this.x * this.x + this.y * this.y;\n    if (length > 0) {\n      length = Math.sqrt(length);\n      let inverseLength = 1.0 / length;\n      this.x *= inverseLength;\n      this.y *= inverseLength;\n    } else {\n      this.x = 1;\n      this.y = 0;\n    }\n    return length;\n  }\n}\n\nexport class Hit {\n  constructor(collider) {\n    this.collider = collider;\n    this.pos = new Point();\n    this.delta = new Point();\n    this.normal = new Point();\n  }\n}\n\nexport class Sweep {\n  constructor() {\n    this.hit = null;\n    this.pos = new Point();\n    this.time = 1;\n  }\n}\n\nexport class AABB {\n  constructor(pos, half) {\n    this.pos = pos;\n    this.half = half;\n  }\n\n  intersectPoint(point) {\n    const dx = point.x - this.pos.x;\n    const px = this.half.x - abs(dx);\n    if (px <= 0) {\n      return null;\n    }\n\n    const dy = point.y - this.pos.y;\n    const py = this.half.y - abs(dy);\n    if (py <= 0) {\n      return null;\n    }\n\n    let hit = new Hit(this);\n    if (px < py) {\n      const sx = sign(dx);\n      hit.delta.x = px * sx;\n      hit.normal.x = sx;\n      hit.pos.x = this.pos.x + (this.half.x * sx);\n      hit.pos.y = point.y;\n    } else {\n      const sy = sign(dy);\n      hit.delta.y = py * sy;\n      hit.normal.y = sy;\n      hit.pos.x = point.x;\n      hit.pos.y = this.pos.y + (this.half.y * sy);\n    }\n    return hit;\n  }\n\n  intersectSegment(pos, delta, paddingX = 0, paddingY = 0) {\n    let scaleX = 1.0 / delta.x;\n    let scaleY = 1.0 / delta.y;\n    let signX = sign(scaleX);\n    let signY = sign(scaleY);\n    let nearTimeX = (this.pos.x - signX * (this.half.x + paddingX) - pos.x) * scaleX;\n    let nearTimeY = (this.pos.y - signY * (this.half.y + paddingY) - pos.y) * scaleY;\n    let farTimeX = (this.pos.x + signX * (this.half.x + paddingX) - pos.x) * scaleX;\n    let farTimeY = (this.pos.y + signY * (this.half.y + paddingY) - pos.y) * scaleY;\n    if (nearTimeX > farTimeY || nearTimeY > farTimeX) {\n      return null;\n    }\n\n    let nearTime = nearTimeX > nearTimeY ? nearTimeX : nearTimeY;\n    let farTime = farTimeX < farTimeY ? farTimeX : farTimeY;\n    if (nearTime >= 1 || farTime <= 0) {\n      return null;\n    }\n\n    let hit = new Hit(this);\n    hit.time = clamp(nearTime, 0, 1);\n    if (nearTimeX > nearTimeY) {\n      hit.normal.x = -signX;\n      hit.normal.y = 0;\n    } else {\n      hit.normal.x = 0;\n      hit.normal.y = -signY;\n    }\n    hit.delta.x = hit.time * delta.x;\n    hit.delta.y = hit.time * delta.y;\n    hit.pos.x = pos.x + hit.delta.x;\n    hit.pos.y = pos.y + hit.delta.y;\n    return hit;\n  }\n\n  intersectAABB(box) {\n    let dx = box.pos.x - this.pos.x;\n    let px = (box.half.x + this.half.x) - abs(dx);\n    if (px <= 0) {\n      return null;\n    }\n\n    let dy = box.pos.y - this.pos.y;\n    let py = (box.half.y + this.half.y) - abs(dy);\n    if (py <= 0) {\n      return null;\n    }\n\n    let hit = new Hit(this);\n    if (px < py) {\n      let sx = sign(dx);\n      hit.delta.x = px * sx;\n      hit.normal.x = sx;\n      hit.pos.x = this.pos.x + (this.half.x * sx);\n      hit.pos.y = box.pos.y;\n    } else {\n      let sy = sign(dy);\n      hit.delta.y = py * sy;\n      hit.normal.y = sy;\n      hit.pos.x = box.pos.x;\n      hit.pos.y = this.pos.y + (this.half.y * sy);\n    }\n    return hit;\n  }\n\n  sweepAABB(box, delta) {\n    let sweep = new Sweep();\n    if (delta.x === 0 && delta.y === 0) {\n      sweep.pos.x = box.pos.x;\n      sweep.pos.y = box.pos.y;\n      sweep.hit = this.intersectAABB(box);\n      if (sweep.hit) {\n        sweep.time = sweep.hit.time = 0;\n      } else {\n        sweep.time = 1;\n      }\n      return sweep;\n    }\n\n    sweep.hit = this.intersectSegment(box.pos, delta, box.half.x, box.half.y);\n    if (sweep.hit) {\n      sweep.time = clamp(sweep.hit.time - EPSILON, 0, 1);\n      sweep.pos.x = box.pos.x + delta.x * sweep.time;\n      sweep.pos.y = box.pos.y + delta.y * sweep.time;\n      let direction = delta.clone();\n      direction.normalize();\n      sweep.hit.pos.x = clamp(\n        sweep.hit.pos.x + direction.x * box.half.x,\n        this.pos.x - this.half.x,\n        this.pos.x + this.half.x);\n      sweep.hit.pos.y = clamp(\n        sweep.hit.pos.y + direction.y * box.half.y,\n        this.pos.y - this.half.y,\n        this.pos.y + this.half.y);\n    } else {\n      sweep.pos.x = box.pos.x + delta.x;\n      sweep.pos.y = box.pos.y + delta.y;\n      sweep.time = 1;\n    }\n    return sweep;\n  }\n\n  sweepInto(staticColliders, delta) {\n    let nearest = new Sweep();\n    nearest.time = 1;\n    nearest.pos.x = this.pos.x + delta.x;\n    nearest.pos.y = this.pos.y + delta.y;\n    for (let i = 0, il = staticColliders.length; i < il; i++) {\n      let sweep = staticColliders[i].sweepAABB(this, delta);\n      if (sweep.time < nearest.time) {\n        nearest = sweep;\n      }\n    }\n    return nearest;\n  }\n}\n\nexport class Circle {\n  constructor(pos, radius) {\n    this.pos = pos;\n    this.radius = radius;\n  }\n\n  intersectPoint(point, padding=0) {\n    let dx = point.x - this.pos.x;\n    let dy = point.y - this.pos.y;\n    let distanceSquared = dx * dx + dy * dy;\n    let minDistance = this.radius + padding;\n    if (distanceSquared >= (minDistance * minDistance)) {\n      return null;\n    }\n    let hit = new Hit(this);\n    hit.normal.x = dx;\n    hit.normal.y = dy;\n    hit.normal.normalize();\n    hit.pos.x = this.pos.x + hit.normal.x * this.radius;\n    hit.pos.y = this.pos.y + hit.normal.y * this.radius;\n    hit.delta.x = (hit.pos.x + hit.normal.x * padding) - point.x;\n    hit.delta.y = (hit.pos.y + hit.normal.y * padding) - point.y;\n    return hit;\n  }\n\n  intersectSegment(pos, delta, padding=0) {\n    let r = this.radius + padding;\n    let mx = pos.x - this.pos.x;\n    let my = pos.y - this.pos.y;\n    let dx = delta.x;\n    let dy = delta.y;\n    let a = dx * dx + dy * dy;              // D . D\n    let b = 2 * (mx * dx + my * dy);        // 2(M . D)\n    let c = (mx * mx + my * my) - (r * r);  // (M . M) - r^2\n    let discr = (b * b) - (4 * a * c);      // b^2 - 4ac\n    if (discr < 0) {\n      return null;\n    }\n\n    let time = (-b - Math.sqrt(discr)) / (2 * a);\n    if (time > 1) {\n      return null;\n    }\n\n    time = clamp(time, 0, 1);\n    let hit = new Hit(this);\n    hit.normal.x = mx + time * dx;\n    hit.normal.y = my + time * dy;\n    hit.normal.normalize();\n    hit.pos.x = pos.x + time * dx;\n    hit.pos.y = pos.y + time * dy;\n    hit.time = time;\n    return hit;\n  }\n\n  intersectAABB(box) {\n    let dx = clamp(this.pos.x, box.pos.x - box.half.x, box.pos.x + box.half.x);\n    let dy = clamp(this.pos.y, box.pos.y - box.half.y, box.pos.y + box.half.y);\n    dx -= this.pos.x;\n    dy -= this.pos.y;\n    let distanceSquared = dx * dx + dy * dy;\n    if (distanceSquared >= this.radius * this.radius) {\n      return null;\n    }\n\n    let hit = new Hit(this);\n    hit.normal.x = box.pos.x - this.pos.x;\n    hit.normal.y = box.pos.y - this.pos.y;\n    hit.normal.normalize();\n    hit.pos.x = this.pos.x + (hit.normal.x * this.radius);\n    hit.pos.y = this.pos.y + (hit.normal.y * this.radius);\n    let px, py;\n    if (abs(hit.normal.x) > abs(hit.normal.y)) {\n      px = box.half.x * sign(hit.normal.x);\n      py = px * (hit.normal.y) / hit.normal.x;\n    } else {\n      py = box.half.y * sign(hit.normal.y);\n      px = (py * hit.normal.x) / hit.normal.y;\n    }\n    hit.delta.x = (hit.pos.x + px) - box.pos.x;\n    hit.delta.y = (hit.pos.y + py) - box.pos.y;\n    return hit;\n  }\n\n  intersectCircle(circle) {\n    return this.intersectPoint(circle.pos, circle.radius);\n  }\n\n  sweepCircle(circle, delta) {\n    let sweep = new Sweep();\n    if (delta.x === 0 && delta.y === 0) {\n      sweep.pos.x = circle.pos.x;\n      sweep.pos.y = circle.pos.y;\n      sweep.hit = this.intersectCircle(circle);\n      if (sweep.hit) {\n        sweep.time = sweep.hit.time = 0;\n      } else {\n        sweep.time = 1;\n      }\n      return sweep;\n    }\n    sweep.hit = this.intersectSegment(circle.pos, delta, circle.radius);\n    if (sweep.hit) {\n      sweep.time = clamp(sweep.hit.time - EPSILON, 0, 1);\n      sweep.pos.x = circle.pos.x + delta.x * sweep.time;\n      sweep.pos.y = circle.pos.y + delta.y * sweep.time;\n      sweep.hit.pos.x -= sweep.hit.normal.x * circle.radius;\n      sweep.hit.pos.y -= sweep.hit.normal.y * circle.radius;\n    } else {\n      sweep.pos.x = circle.pos.x + delta.x;\n      sweep.pos.y = circle.pos.y + delta.y;\n    }\n    return sweep;\n  }\n}\n"]}